services:
  app:
    image: gathering-21-build:latest
    environment:
      # DEV_DB_HOST: gathering_project-db-1
      # DEV_DB_PORT: ${DEV_DB_PORT}
      REDIS_HOST: gathering_project-redis-1
      REDIS_PORT: ${REDIS_PORT}
      SPRING_DATASOURCE_INITIALIZATION_MODE: always  # 스프링부트에서 데이터베이스 초기화 로직을 실행할 수 있도록 설정
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${DEV_SERVER_PORT}:${DEV_SERVER_PORT}"
    env_file:
      - .env.dev
    depends_on:
      - redis
    command:
      - bash
      - -c
      - |
        ./wait-for-it.sh redis:6379 -s -t 100
    networks:
      - app-network
    restart: on-failure

  # db:
  #   image: mysql:8.0
  #   container_name: gathering_project-db-1
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${DEV_DB_PASS}
  #     MYSQL_DATABASE: ${DEV_DB_NAME}
  #   ports:
  #     - "${DEV_DB_PORT}:${DEV_DB_PORT}"
  #   networks:
  #     - app-network
  #   volumes:
  #     - db-data:/var/lib/mysql
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "--silent"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 10  # 초기화가 오래 걸리는 경우를 대비하여 재시도 횟수 증가
  #   restart: always  # db 서비스가 오류 발생 시 자동 재시작

  redis:
    image: redis:latest
    container_name: gathering_project-redis-1
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - app-network
    volumes:
      - redis-data:/data
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
  redis-data:

