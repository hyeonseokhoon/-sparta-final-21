name: Dev CI

on:
  push:
    branches:
      - dev  # dev 브랜치에 푸시될 때 실행
  pull_request:
    branches:
      - dev  # dev 브랜치에 대한 PR 생성 시 실행

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4


      - name: Gradle Wrapper에 실행 권한 부여
        run: chmod +x ./gradlew


      - name: Gradle 의존성 캐시 사용
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches/modules-2/files-2.1
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle


      - name: JDK 설정
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'


      - name: Linting 및 코드 품질 검사
        run: ./gradlew clean checkstyleMain --no-build-cache

      - name: Checkstyle HTML 보고서 저장
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: checkstyle-html-report
          path: build/reports/checkstyle/checkstyleMain.html

      - name: Checkstyle 위반 확인
        run: |
          violations=$(grep -c '<error ' build/reports/checkstyle/checkstyleMain.xml || true)
          echo "Found $violations Checkstyle violations."
          if [ "$violations" -gt 0 ]; then
             echo "Checkstyle violations found: $violations"
             exit 1
           else
             echo "No Checkstyle violations found."
           fi



      - name: 빌드 및 테스트 실행
        run: |
          ./gradlew build -x test \
          --no-daemon \
          --build-cache


    env:
      # 개발 서버 설정
      DEV_SERVER_PORT: ${{ secrets.DEV_SERVER_PORT }}
      DEV_DB_HOST: ${{ secrets.DEV_DB_HOST }}
      DEV_DB_PORT: ${{ secrets.DEV_DB_PORT }}
      DEV_DB_NAME: ${{ secrets.DEV_DB_NAME }}
      DEV_DB_USER: ${{ secrets.DEV_DB_USER }}
      DEV_DB_PASS: ${{ secrets.DEV_DB_PASS }}

      # JWT 설정
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      JWT_EXPIRATION_TIME: ${{ secrets.JWT_EXPIRATION_TIME }}

      # OAuth2 (Kakao) 설정
      KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
      KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}

      # Kakao Map 설정
      KAKAO_MAP_REST_API: ${{ secrets.KAKAO_MAP_REST_API }}

      # AWS S3 설정
      S3_PLACE: ${{ secrets.S3_PLACE }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      S3_URL: ${{ secrets.S3_URL }}
      S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}

      # 기본 프로필 이미지 URL
      DEFAULT_PROFILE_IMAGE_URL: ${{ secrets.DEFAULT_PROFILE_IMAGE_URL }}