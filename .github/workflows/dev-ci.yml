name: Dev CI

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build-and-test:
    name: 빌드 및 테스트
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DEV_DB_PASS }}
          MYSQL_DATABASE: ${{ secrets.DEV_DB_NAME }}
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306
      redis:
        image: redis:6.2
        ports:
          - 6379:6379
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: JDK 설정
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle Wrapper 실행 권한 부여
        run: chmod +x ./gradlew

      - name: Gradle 의존성 캐시
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches/modules-2/files-2.1
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Gradle 빌드, 테스트 및 JaCoCo 실행
        env:
          DEV_SERVER_PORT: ${{ secrets.DEV_SERVER_PORT }}
          DEV_DB_HOST: 127.0.0.1
          DEV_DB_PORT: 3306
          DEV_DB_NAME: ${{ secrets.DEV_DB_NAME }}
          DEV_DB_USER: ${{ secrets.DEV_DB_USER }}
          DEV_DB_PASS: ${{ secrets.DEV_DB_PASS }}
          REDIS_HOST: 127.0.0.1
          REDIS_PORT: 6379
          KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
          KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
          S3_PLACE: ${{ secrets.S3_PLACE }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          S3_URL: ${{ secrets.S3_URL }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
          SQS_PLACE: ${{ secrets.SQS_PLACE }}
          SQS_URL: ${{ secrets.SQS_URL }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          JWT_EXPIRATION_TIME: ${{ secrets.JWT_EXPIRATION_TIME }}
          JWT_REFRESH_EXPIRATION_TIME: ${{ secrets.JWT_REFRESH_EXPIRATION_TIME }}
          DEFAULT_PROFILE_IMAGE_URL: ${{ secrets.DEFAULT_PROFILE_IMAGE_URL }}
          KAKAO_MAP_REST_API: ${{ secrets.KAKAO_MAP_REST_API }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          MAIL_HOST: ${{ secrets.MAIL_HOST }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_SENDER: ${{ secrets.MAIL_SENDER }}
          BASE_URL: ${{ secrets.BASE_URL }}
        run: ./gradlew clean build jacocoTestReport --no-daemon --build-cache

      - name: JaCoCo 커버리지 리포트 저장
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: jacoco-reports
          path: build/reports/jacoco/test/html/**

  checkstyle:
    name: Checkstyle 검사
    runs-on: ubuntu-latest
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: JDK 설정
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle Wrapper 실행 권한 부여
        run: chmod +x ./gradlew

      - name: Gradle 의존성 캐시
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches/modules-2/files-2.1
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Checkstyle 실행
        run: ./gradlew clean checkstyleMain --no-build-cache

      - name: Checkstyle HTML 보고서 저장
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: checkstyle-html-report
          path: build/reports/checkstyle/checkstyleMain.html

      - name: Checkstyle 위반 확인
        run: |
          violations=$(grep -c '<error ' build/reports/checkstyle/checkstyleMain.xml || true)
          echo "Found $violations Checkstyle violations."
          if [ "$violations" -gt 0 ]; then
            echo "Checkstyle violations found: $violations"
            exit 1
          else
            echo "No Checkstyle violations found."
          fi
