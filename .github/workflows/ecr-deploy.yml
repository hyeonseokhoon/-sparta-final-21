name: Deploy to ECR

on:
  push:
    branches:
      - main
      - feature/seokhoon

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      REDIS_PORT: 6379
      DEV_SERVER_PORT: 3306

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: JDK 설정
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Download existing task definition
        run: |
          aws ecs describe-task-definition \
            --task-definition monolog-fy:2 \
            --query taskDefinition \
            > task-definition.json

      - name: make application.yml
        run: |
          # create application.yml
          cd ./src/main/resources
          
          # application.yml file 생성하기
          touch ./application.yml
          
          # secrets 값을 application.yml에 쓰기
          echo "${{ secrets.APPLICATION_VALUE }}" >> ./application.yml

      - name: Docker Compose로 이미지 빌드 및 푸시
        id: build-push-docker-image
        env:
          AWS_REGION: ap-northeast-2
          ECR_REPOSITORY: gathering-21/monolog
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          # Docker Compose 를 사용하여 서비스 빌드
          docker compose -f docker-compose.yml build
          
          # 태그를 설정하고 ECR 로 푸시
          docker tag gathering-21-build:latest $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_SHA::7}
          # docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_SHA::7} .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_SHA::7}

          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_SHA::7}"
          
          # latest 태그로도 푸시
          docker tag gathering-21-build:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          # docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Render ECS Task Definition
        id: render-task-definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json # 베이스가 될 Task definition json 파일 경로
          container-name: monolog-container # 컨테이너명
          image: ${{ steps.build-push-docker-image.outputs.image }}

      - name: deploy ECS Task Definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-task-definition.outputs.task-definition }}
          service: monolog2-service # ECS 서비스명
          cluster: monolog-cluster # ECS 클러스터 명
          wait-for-service-stability: true